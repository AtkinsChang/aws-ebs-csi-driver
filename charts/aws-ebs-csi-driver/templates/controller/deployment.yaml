# Controller Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "aws-ebs-csi-driver.controller.fullname" . }}
  labels:
    {{- include "aws-ebs-csi-driver.controller.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controller.replicaCount }}
  selector:
    matchLabels:
      {{- include "aws-ebs-csi-driver.controller.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "aws-ebs-csi-driver.controller.labels" . | nindent 8 }}
        {{- with .Values.controller.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.controller.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      nodeSelector:
        kubernetes.io/os: linux
        {{- with .Values.controller.nodeSelector }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      serviceAccountName: {{ include "aws-ebs-csi-driver.controller.serviceAccountName" . }}
      priorityClassName: {{ default "system-cluster-critical" .Values.controller.priorityClassName }}
      {{- with .Values.controller.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - operator: Exists
          effect: NoExecute
          tolerationSeconds: 300
        {{- with .Values.controller.tolerations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- if .Values.controller.topologySpreadConstraints }}
      {{- $tscLabelSelector := dict "labelSelector" ( dict "matchLabels" ( include "aws-ebs-csi-driver.controller.selectorLabels" ) ) }}
      {{- $constraints := list }}
      {{- range .Values.controller.topologySpreadConstraints }}
        {{- $constraints = mustAppend $constraints (mergeOverwrite . $tscLabelSelector) }}
      {{- end }}
      topologySpreadConstraints:
        {{- toYaml $constraints | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: ebs-plugin
          {{- with .Values.controller.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: {{ printf "%s:%s" .Values.image.repository (default (printf "v%s" .Chart.AppVersion) (toString .Values.image.tag)) }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            {{- if ne .Release.Name "kustomize" }}
            - controller
            {{- else }}
            # - {all,controller,node} # specify the driver mode
            {{- end }}
            - --endpoint=$(CSI_ENDPOINT)
            {{- if .Values.controller.extraVolumeTags }}
            {{- include "aws-ebs-csi-driver.controller.extra-volume-tags" . | nindent 12 }}
            {{- end }}
            {{- with .Values.controller.k8sTagClusterId }}
            - --k8s-tag-cluster-id={{ . }}
            {{- end }}
            {{- with .Values.controller.httpEndpoint }}
            - --http-endpoint={{ . }}
            {{- end }}
            - --logtostderr
            {{- with .Values.controller.logLevel }}
            - --v={{ . }}
            {{- end }}
            {{- with .Values.controller.additionalArgs }}
            - {{ toYaml . | nindent 12 }}
            {{- end }}
          env:
            - name: CSI_ENDPOINT
              value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
            - name: CSI_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-secret
                  key: key_id
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-secret
                  key: access_key
                  optional: true
            {{- with .Values.controller.region }}
            - name: AWS_REGION
              value: {{ . }}
            {{- end }}
            {{- if .Values.proxy.http_proxy }}
            {{- include "aws-ebs-csi-driver.http-proxy" . | nindent 12 }}
            {{- end }}
            {{- with .Values.controller.env }}
            {{- . | toYaml | nindent 12 }}
            {{- end }}
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy
          ports:
            - name: healthz
              containerPort: 9808
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 10
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 10
            failureThreshold: 5
          {{- with .Values.controller.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        - name: csi-provisioner
          image: {{ printf "%s:%s" .Values.sidecars.provisioner.image.repository .Values.sidecars.provisioner.image.tag }}
          imagePullPolicy: {{ .Values.sidecars.provisioner.image.pullPolicy }}
          args:
            - --csi-address=$(ADDRESS)
            - --leader-election
            - --http-endpoint=:8081
            - --feature-gates=Topology=true
            - --default-fstype=ext4
            {{- if .Values.controller.extraCreateMetadata }}
            - --extra-create-metadata
            {{- end }}
            {{- with .Values.sidecars.provisioner.logLevel }}
            - --v={{ . }}
            {{- end }}
          env:
            - name: ADDRESS
              value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
            {{- if .Values.proxy.http_proxy }}
            {{- include "aws-ebs-csi-driver.http-proxy" . | nindent 12 }}
            {{- end }}
            {{- with .Values.sidecars.provisioner.env }}
            {{- . | toYaml | nindent 12 }}
            {{- end }}
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy
          ports:
            - name: provisioner
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz/leader-election
              port: provisioner
            initialDelaySeconds: 10
            timeoutSeconds: 10
            periodSeconds: 20
            failureThreshold: 1
          {{- with default .Values.controller.resources .Values.sidecars.provisioner.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        - name: csi-attacher
          image: {{ printf "%s:%s" .Values.sidecars.attacher.image.repository .Values.sidecars.attacher.image.tag }}
          imagePullPolicy: {{ .Values.sidecars.attacher.image.pullPolicy }}
          args:
            - --csi-address=$(ADDRESS)
            - --leader-election
            - --http-endpoint=:8082
            {{- with .Values.sidecars.attacher.logLevel }}
            - --v={{ . }}
            {{- end }}
          env:
            - name: ADDRESS
              value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
            {{- if .Values.proxy.http_proxy }}
            {{- include "aws-ebs-csi-driver.http-proxy" . | nindent 12 }}
            {{- end }}
            {{- with .Values.sidecars.attacher.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy
          ports:
            - name: attacher
              containerPort: 8082
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz/leader-election
              port: attacher
            initialDelaySeconds: 10
            timeoutSeconds: 10
            periodSeconds: 20
            failureThreshold: 1
          {{- with default .Values.controller.resources .Values.sidecars.attacher.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- if .Capabilities.APIVersions.Has "snapshot.storage.k8s.io/v1" }}
        - name: csi-snapshotter
          image: {{ printf "%s:%s" .Values.sidecars.snapshotter.image.repository .Values.sidecars.snapshotter.image.tag }}
          imagePullPolicy: {{ .Values.sidecars.snapshotter.image.pullPolicy }}
          args:
            - --csi-address=$(ADDRESS)
            - --leader-election
            - --http-endpoint=:8084
            {{- with .Values.sidecars.snapshotter.logLevel }}
            - --v={{ . }}
            {{- end }}
          env:
            - name: ADDRESS
              value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
            {{- if .Values.proxy.http_proxy }}
            {{- include "aws-ebs-csi-driver.http-proxy" . | nindent 12 }}
            {{- end }}
            {{- with .Values.sidecars.snapshotter.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy
          ports:
            - name: snapshotter
              containerPort: 8084
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz/leader-election
              port: snapshotter
            initialDelaySeconds: 10
            timeoutSeconds: 10
            periodSeconds: 20
            failureThreshold: 1
          {{- with default .Values.controller.resources .Values.sidecars.snapshotter.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}
        - name: csi-resizer
          image: {{ printf "%s:%s" .Values.sidecars.resizer.image.repository .Values.sidecars.resizer.image.tag }}
          imagePullPolicy: {{ .Values.sidecars.resizer.image.pullPolicy }}
          args:
            - --csi-address=$(ADDRESS)
            - --http-endpoint=:8083
            - --leader-election
            {{- with .Values.sidecars.resizer.logLevel }}
            - --v={{ . }}
            {{- end }}
          env:
            - name: ADDRESS
              value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
            {{- if .Values.proxy.http_proxy }}
            {{- include "aws-ebs-csi-driver.http-proxy" . | nindent 12 }}
            {{- end }}
            {{- with .Values.sidecars.resizer.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy
          ports:
            - name: resizer
              containerPort: 8083
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz/leader-election
              port: resizer
            initialDelaySeconds: 10
            timeoutSeconds: 10
            periodSeconds: 20
            failureThreshold: 1
          {{- with default .Values.controller.resources .Values.sidecars.resizer.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        - name: liveness-probe
          image: {{ printf "%s:%s" .Values.sidecars.livenessProbe.image.repository .Values.sidecars.livenessProbe.image.tag }}
          imagePullPolicy: {{ .Values.sidecars.livenessProbe.image.pullPolicy }}
          args:
            - --csi-address=$(ADDRESS)
            {{- with .Values.sidecars.livenessProbe.logLevel }}
            - --v={{ . }}
            {{- end }}
          env:
            - name: ADDRESS
              value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
            {{- if .Values.proxy.http_proxy }}
            {{- include "aws-ebs-csi-driver.http-proxy" . | nindent 12 }}
            {{- end }}
            {{- with .Values.sidecars.livenessProbe.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy
          {{- with default .Values.controller.resources .Values.sidecars.livenessProbe.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: socket-dir
          emptyDir: {}
